// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zircon_Hobbies.Data;

#nullable disable

namespace Zircon_Hobbies.Migrations
{
    [DbContext(typeof(Zircon_HobbiesContext))]
    [Migration("20250310145619_Cart_ShoppingCart")]
    partial class Cart_ShoppingCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zircon_Hobbies.Models.Gunpla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductionCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("Production_CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Production_CompanyId");

                    b.ToTable("Gunpla");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.Production_Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Production_Company");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.cartItem", b =>
                {
                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GunplaId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("GunplaId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.Gunpla", b =>
                {
                    b.HasOne("Zircon_Hobbies.Models.Production_Company", null)
                        .WithMany("Gunplas")
                        .HasForeignKey("Production_CompanyId");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.cartItem", b =>
                {
                    b.HasOne("Zircon_Hobbies.Models.Gunpla", "Gunpla")
                        .WithMany()
                        .HasForeignKey("GunplaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zircon_Hobbies.Models.ShoppingCart", null)
                        .WithMany("cartItems")
                        .HasForeignKey("ShoppingCartId");

                    b.Navigation("Gunpla");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.Production_Company", b =>
                {
                    b.Navigation("Gunplas");
                });

            modelBuilder.Entity("Zircon_Hobbies.Models.ShoppingCart", b =>
                {
                    b.Navigation("cartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
